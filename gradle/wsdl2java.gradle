project.ext.cxfDependencies = [
    'org.apache.cxf:cxf-codegen-plugin:2.4.6',
	'org.apache.cxf.xjcplugins:cxf-xjc-ts:2.4.0',
	'commons-lang:commons-lang:2.6',
	'com.sun.xml.bind:jaxb-xjc:2.2.4-1',
	'com.sun.xml.bind:jaxb-impl:2.2.4-1'
]

configurations {
    wsdlDeps
}

sourceSets {
    genSrc {
        java {
            srcDir 'build/genSrc/java'
        }
    }
}

dependencies {
    wsdlDeps cxfDependencies
    compile cxfDependencies
	genSrcCompile cxfDependencies
}

project.ext.wsdlDir = file("src/main/resources/wsdl")

project.ext.wsdlDir.eachFile {
	if (it.name.endsWith('.wsdl')) {
	    project.ext.wsdlFile = it
	} else if (it.name.endsWith('binding.xml')) {
		project.ext.bindingFile = it
	}
}

project.ext.generatedWsdlDir = file("build/genSrc/java")

if (project.hasProperty('createGdmAdapter')) {
    project.ext.typeBuild = '-all'
} else {
    project.ext.typeBuild = '-client'
}

task wsdl2Java(type: JavaExec) {  
    outputs.upToDateSpec = new org.gradle.api.specs.AndSpec()  
    inputs.files configurations.compile, wsdlFile
    outputs.files project.ext.generatedWsdlDir
    main = 'org.apache.cxf.tools.wsdlto.WSDLToJava'
    classpath = configurations.wsdlDeps
    args '-d', project.ext.generatedWsdlDir,
         project.ext.typeBuild,  
		 '-b', project.ext.bindingFile,
		 '-xjc-Xts',
		 '-xjc-mark-generated',
         project.ext.wsdlFile
}


compileGenSrcJava.dependsOn wsdl2Java
jar.dependsOn genSrcClasses

def dependencyList = ['org.apache.commons.lang','org.apache.cxf']

jar {
	manifest { attributes 'Dependencies': dependencyList.join(' , ')}
    from project.sourceSets.genSrc.output
}
